package com.infostretch.isos;

import org.apache.cordova.DroidGap;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.IntentFilter;
import android.os.AsyncTask;
import android.os.Bundle;
import android.widget.Toast;

import com.google.android.gcm.GCMRegistrar;
import com.infostretch.network.ConnectionChecker;
import com.infostretch.util.Globals;
import com.infostretch.util.Preference;

public class ISOSMainActivity extends DroidGap {

	private AsyncTask<Void, Void, Void> mRegisterTask;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		super.setIntegerProperty("splashscreen", R.drawable.splash);
		super.setIntegerProperty("loadUrlTimeoutValue", 70000);
		if (ConnectionChecker.selfLearnig(getApplicationContext())) {
			new AsyncTask<Void, Void, Void>() {

				@Override
				protected Void doInBackground(Void... params) {
					registerDevice();
					return null;
				}
			}.execute();
			super.loadUrl("file:///android_asset/www/index.html", 4000);
			super.appView.setVerticalScrollBarEnabled(false);
			super.appView.setHorizontalScrollBarEnabled(false);
		} else {
			ShowNetworkErrorDialog(getContext());
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		if (!ConnectionChecker.selfLearnig(getApplicationContext())) {
			ShowNetworkErrorDialog(getContext());
		}
	}

	@Override
	protected void onResume() {
		super.onResume();
	}

	/**
	 * Registers Device token with GCM for push notifications
	 */
	private void registerDevice() {
		// Make sure the device has the proper dependencies.
		GCMRegistrar.checkDevice(this);
		// Make sure the manifest was properly set - comment out this line
		// while developing the app, then uncomment it when it's ready.
		GCMRegistrar.checkManifest(this);
		registerReceiver(new PushReceiver(), new IntentFilter(
				PushReceiver.DISPLAY_MESSAGE_ACTION));
		final String regId = GCMRegistrar.getRegistrationId(this);
		// GCMRegistrar.unregister(this);
		ISOSPlugin.DeviceToken = regId;
		
		Toast.makeText(getContext(), "Registered Token: ",
				Toast.LENGTH_SHORT).show();
		
		// Check if regid already presents
		if (regId.equals("")) {
			// Registration is not present, register now with GCM
			GCMRegistrar.register(ISOSMainActivity.this, Globals.SENDER_ID);
		} else {
			Preference.setToken(ISOSMainActivity.this, regId);
			if (!GCMRegistrar.isRegisteredOnServer(this)) {
				GCMRegistrar.register(ISOSMainActivity.this, Globals.SENDER_ID);
			}
		}

	}

	@Override
	protected void onStop() {
		super.onStop();
		if (isFinishing()) {
			Toast.makeText(getContext(), "ISOS application is killed",
					Toast.LENGTH_SHORT).show();
		} else {
			Toast.makeText(getContext(),
					"ISOS application is running in background",
					Toast.LENGTH_SHORT).show();
		}
	}

	@Override
	public void onBackPressed() {
		finish();
	}
/**
 * Shows Network error dialog
 */
	public void ShowNetworkErrorDialog(final Context context) {
		new AlertDialog.Builder(context)
				.setTitle(android.R.string.dialog_alert_title)
				.setMessage("Device not connected")
				.setPositiveButton(android.R.string.ok,
						new DialogInterface.OnClickListener() {
							@Override
							public void onClick(DialogInterface dialog,
									int which) {
								dialog.dismiss();
								finish();
							}
						}).show();
	}

}
